@page "/exams/edit/{Id}"
@inherits RuiComponentBase<EditViewModel>

<PageContainer Title="Edit Questions">
    <Content>
        <div style="text-align: center;">
            <Search Placeholder="Please Enter" @bind-Value="ViewModel.SearchText"
                    EnterButton="@("Search For")"
                    Size="large"
                    Style="max-width: 522px; width: 100%;"
                    OnSearch="() => Search()" />
        </div>
    </Content>
    <ChildContent>
        <Skeleton Loading="IsLoading">

            <AntList TItem="QuestionViewModel"
                     Context="listItemContext"
                     Size="large"
                     ItemLayout="ListItemLayout.Vertical"
                     DataSource="@ViewModel.Items">
                <ChildContent>
                    <ListItem Actions="GetQuestionActions(listItemContext)">
                        <ListItemMeta>
                            <DescriptionTemplate>
                                <Preview Markdown="@listItemContext.Title" />
                                @foreach (var item in listItemContext.Options)
                                {
                                    if (listItemContext.QuestionType == ViewModels.QuestionTypes.DragDrop)
                                    {
                                        <Alert Type="@AlertType.Success"
                                               Message="@($"{item.Name}-{item.AnswerText}")" />
                                    }
                                    else
                                    {
                                        if (item.IsCorrect)
                                        {
                                            <Alert Type="@AlertType.Success" ShowIcon="true">
                                                <MessageTemplate>
                                                    <Preview Markdown="@item.Name" />
                                                </MessageTemplate>
                                            </Alert>
                                        }
                                        else
                                        {
                                            <Alert Type="@AlertType.Error" ShowIcon="true">
                                                <MessageTemplate>
                                                    <Preview Markdown="@item.Name" />
                                                </MessageTemplate>
                                            </Alert>
                                        }
                                    }
                                }
                            </DescriptionTemplate>
                        </ListItemMeta>
                    </ListItem>
                </ChildContent>
                <LoadMore>
                    @if (!IsLoading && ViewModel.HasMoreData)
                    {
                        <div class="demo-loadmore-btn-content ">
                            <Button OnClick="OnLoadMore">loading more</Button>
                        </div>
                    }
                </LoadMore>
            </AntList>
        </Skeleton>
    </ChildContent>
</PageContainer>


@code{
    RenderFragment extra =@<div @onclick:stopPropagation><Icon Type="setting"></Icon></div>;
private RenderFragment[] GetQuestionActions(QuestionViewModel viewModel)
{
var result = new List<RenderFragment>();
result.Add(GetEditAction(viewModel));
result.Add(GetDeleteAction(viewModel));
return result.ToArray();
}
private RenderFragment GetDeleteAction(QuestionViewModel viewModel)
{
RenderFragment option =@<Popconfirm Title=@($"Are you sure to delete question ({viewModel.Title})?")
                                    OnConfirm="async() => await OnRemoveQuestion(viewModel)">
    <Icon Type="delete" Class="section-action"></Icon>
</Popconfirm>;
return option;
}
private RenderFragment GetEditAction(QuestionViewModel viewModel)
{
RenderFragment option =@<Icon Type="edit" Class="section-action" OnClick="async () => await OnEditQuestion(viewModel)"></Icon>;
return option;
}
}
